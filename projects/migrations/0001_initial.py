# Generated by Django 3.0.4 on 2020-03-29 15:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('avatar', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('name', models.SlugField(primary_key=True, serialize=False)),
                ('url', models.URLField(verbose_name='URL')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doi', models.CharField(max_length=200, unique=True, verbose_name='DOI')),
                ('pmid', models.CharField(blank=True, max_length=200, verbose_name='PMID')),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('name', models.SlugField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=200)),
                ('url', models.URLField(verbose_name='URL')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Author')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Platform')),
                ('publications', models.ManyToManyField(blank=True, to='projects.Publication')),
                ('tags', models.ManyToManyField(to='projects.Tag')),
            ],
        ),
    ]
